{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/js-exception","result":{"data":{"markdownRemark":{"html":"<h2>예외처리의 필요성</h2>\n<p>예상치 못하게 발생한 에러를 잘 처리해야 프로그램 전체가 멈추지 않고 동작할 수 있음</p>\n<h2>Try, Catch, Finally</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 실행하고 싶은 코드</span>\n\t<span class=\"token comment\">// 여기서 실행하다가 에러가 발생하면 catch 블록으로 이동</span>\n\t<span class=\"token keyword\">throw</span> <span class=\"token punctuation\">{</span>전달할 e 값<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\t\t<span class=\"token comment\">// catch 블록으로 이동</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 에러가 발생했을 때,</span>\n\t<span class=\"token comment\">// 에러를 파라미터로 받아서 처리함</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 가장 마지막에 항상 실행되어야 할 코드</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>try는 반드시 있어야 함</li>\n<li>catch나 finally는 둘 중 하나만 있어도 실행 가능</li>\n<li><code class=\"language-text\">throw</code> : 에러를 발생시키는 명령어</li>\n</ul>\n<h3>에러 처리 과정</h3>\n<p>throw가 발생하면 catch 구문을 찾아서 이동</p>\n<ul>\n<li>현재 블록에 catch나 finally가 없는 경우 상위 블록이나 호출한 함수로 이동</li>\n<li>catch가 존재하지 않는 경우, finally를 실행하고, catch 될 수 있는 구문을 찾아서 이동</li>\n<li>catch 구문에서 에러가 처리되고, 이후 코드를 실행</li>\n</ul>","frontmatter":{"date":"2019-03-26","path":"/posts/js-exception","title":"[JS] 예외처리: try, catch, finally","category":"Javascript"}}},"pageContext":{}},"staticQueryHashes":["1516807325","2390655019","256249292","63159454"]}